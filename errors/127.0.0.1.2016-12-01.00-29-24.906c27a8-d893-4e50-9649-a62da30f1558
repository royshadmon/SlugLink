(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> 'Field' object is not callable"
p3
sS'layer'
p4
S'/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/applications/sluglink/controllers/api.py'
p5
sS'code'
p6
S'# These are the controllers for your ajax api.\r\n\r\ndef get_user_name_from_email(email):\r\n    """Returns a string corresponding to the user first and last names,\r\n    given the user email."""\r\n    u = db(db.auth_user.email == email).select().first()\r\n    if u is None:\r\n        return \'None\'\r\n    else:\r\n        return \' \'.join([u.first_name, u.last_name])\r\n\r\ndef get_posts():\r\n    start_idx = int(request.vars.start_idx) if request.vars.start_idx is not None else 0\r\n    end_idx = int(request.vars.end_idx) if request.vars.end_idx is not None else 0\r\n\r\n    has_more = False\r\n    rows = db().select(db.post.ALL,\r\n                       orderby=~db.post.created_on,\r\n                       limitby=(start_idx, end_idx + 1))\r\n    posts = []\r\n\r\n    for i, r in enumerate(rows):\r\n        if i < end_idx - start_idx:\r\n            posts.append(process_post(r))\r\n        else:\r\n            has_more = True\r\n\r\n    logged_in = auth.user_id is not None\r\n\r\n    return response.json(dict(\r\n        vars=request.vars,\r\n        posts=posts,\r\n        logged_in=logged_in,\r\n        has_more=has_more\r\n    ))\r\n\r\ndef process_post(r):\r\n    if r.updated_on != r.created_on:\r\n        timestamp_display = r.created_on.strftime("%b, %d %Y at %I:%M %p") + " edited " + r.updated_on.strftime("%b, %d %Y at %I:%M %p");\r\n    else:\r\n        timestamp_display = r.created_on.strftime("%b, %d %Y at %I:%M %p");\r\n\r\n    is_owner = auth.user_id and auth.user.email == r.user_email\r\n\r\n    rows = db(db.comments.post_id == r.id).select(orderby=db.comments.created_on())\r\n\r\n    comments = []\r\n\r\n    for comment in rows:\r\n        comments.append(process_comment(comment))\r\n\r\n    t = dict(\r\n        id=r.id,\r\n        name=get_user_name_from_email(r.user_email),\r\n        email=r.user_email,\r\n        post_content=r.post_content,\r\n        created_on=r.created_on,\r\n        timestamp_display=timestamp_display,\r\n        is_owner=is_owner,\r\n        comments=comments\r\n    )\r\n\r\n    return t\r\n\r\ndef process_comment(c):\r\n    timestamp_display = c.created_on.strftime("%b, %d %Y at %I:%M %p");\r\n\r\n    is_owner = auth.user_id and auth.user.email == c.user_email\r\n\r\n    t = dict(\r\n        id=c.id,\r\n        name=get_user_name_from_email(c.user_email),\r\n        email=c.user_email,\r\n        comment_content=c.comment_content,\r\n        created_on=c.created_on,\r\n        timestamp_display=timestamp_display,\r\n        is_owner=is_owner\r\n    )\r\n\r\n    return t\r\n\r\n# Note that we need the URL to be signed, as this changes the db.\r\n@auth.requires_signature()\r\ndef add_post():\r\n    p_id = db.post.insert(\r\n        post_content = request.vars.post_content\r\n    )\r\n    post = process_post(db.post(p_id))\r\n\r\n    return response.json(dict(post=post))\r\n\r\n\r\n@auth.requires_signature()\r\ndef del_post():\r\n    db(db.post.id == request.vars.post_id).delete()\r\n    return "ok"\r\n\r\n@auth.requires_signature()\r\ndef edit_post():\r\n    row = db(db.post.id == request.vars.post_id).select().first()\r\n    row.update_record(post_content = request.vars.post_content)\r\n\r\n    post = process_post(db.post(request.vars.post_id))\r\n\r\n    return response.json(dict(post=post))\r\n\r\ndef add_comment():\r\n    c_id = db.comments.insert(\r\n        post_id=request.vars.post_id,\r\n        comment_content=request.vars.comment_content\r\n    )\r\n    return response.json(dict(comment=process_comment(db.comments(c_id))))\nresponse._vars=response._caller(get_posts)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/applications/sluglink/controllers/api.py", line 113, in <module>\n  File "/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/applications/sluglink/controllers/api.py", line 24, in get_posts\n    posts.append(process_post(r))\n  File "/mnt/c/Users/deen1/Desktop/CMPS 183/web2py/applications/sluglink/controllers/api.py", line 45, in process_post\n    rows = db(db.comments.post_id == r.id).select(orderby=db.comments.created_on())\nTypeError: \'Field\' object is not callable\n'
p11
s.